# This example provides a basic configuration and description based on the M5STACK components
# For further configuration you should visit the ESPHome docs https://esphome.io
# Every line starting with a # can be removed.

## BASIC CONFIGURATION
esphome:
  name: heatpump
  friendly_name: Heatpump
  min_version: 2024.6.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio
  project:
    name: esphome.web
    version: '1.0'

# Select chipset and board configuration - in this case M5STACK
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# [Optional] - Create web interface where you can control the AC from your web browser (without Home Assistant)
web_server:
  port: 80

# Enable logging
logger:
  level: INFO
  logs:
    component: ERROR # Remove the "Your component takes to long to respond warning"

# Enable native API for communication with Home Assistant, this can be removed if you do not plan to use it with Home Assistant
api:

# Enable OTA firmware update, you will be able to upload the firmware over WiFi without connecting the device by cables
ota:
  platform: esphome

# Setup your WiFi password
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

# Specify pins used by the board to comunicate with RS485 board - in this case M5STACK
uart:
  tx_pin: GPIO06   # Use GPIO26 for ATOM Tail485 
  rx_pin: GPIO05   # Use GPIO32 for ATOM Tail485
  # For older devices it could also be 2400. But you should start with 9600.
  baud_rate: 9600
  parity: EVEN

## SAMSUNG AC CONFIGURATION

# Import custom component from GitHub
external_components:
  - source: github://ywteh/esphome_samsung_ac@main 
    components: [samsung_ac]
    refresh: 1d

# Configuration of AC component
samsung_ac:
  # With this row, all read data from the bus is printed on the terminal
  # debug_log_messages: true 

  # For NonNASA devices the following option can be enabled to prevent the device from sleeping when idle. This allows
  # values like internal and external temperature to continue to be tracked when the device isn't in use.
  non_nasa_keepalive: true

  # Capabilities configure the features alle devices of your AC system have (all parts of this section are optional). 
  # All capabilities are off by default, you need to enable only those your devices have.
  # You can override or configure them also on a per devices basis (look below for that).
  capabilities: {}

  devices:
    # Skip everything below on the first run! Wait a minute, watch your ESPHome logs until you see the "Discovered devices:" section and you see some addresses:
    # For NASA devices it looks like this (with 4 indoor devices): 
    #   Indoor:  20.00.00, 20.00.01, 20.00.02, 20.00.03
    # For NonNASA devices it looks like this (with 2 indoor devices): 
    #   Indoor:  00, 01
    # You need this addresses for the the sections below. If you see only a "-" then you should visit the troubleshooting section in the readme. 

    # Repeat everything below for each indoor device address you see in your logs
    - address: "20.00.00" # Indoor device address 
      # Each property below is optional (climate, room_temperature etc.) - you can delete those which you dont need.
      # For the names we suggest to choose a combination of room name and the thing it controls. 

      # Configures/overrides the capabilites for this devices. 
      # Look above for all options.
      capabilities: {}

      # Creates climate control in Home Assistant. A climate control combines multiple of the controls below (like temperature, mode etc.)
      # climate:
      #   name: "Kitchen climate"

      # The controls directly below are all included in the climate control. Its adviced to only add the climate control and skip the extra controls.
      room_temperature:
        name: "Indoor temperature"
      target_temperature:
        name: "Indoor target temperature"
      power:
        name: "Indoor power"
      mode:
        name: "Indoor mode"

      # If your AC sits near or inside the ceiling, the reported room temperature is often a little bit heigher then whats 
      # measured below. This property can be used to correct that value.
      room_temperature_offset: -1.4

      # Only supported on NASA devices
      # room_humidity:
      #   name: "Kitchen humidity"

      # Only supported on NASA based heatpumps
      water_temperature:
        name: "Water tank temperature"
      water_target_temperature:
        name: "Water tank target temperature"
      water_heater_mode:
        name: "Domestic hot water mode"
      water_in_temperature:
        name: "Water in temperature"
      water_out_temperature:
        name: "Water out temperature"
      flow: # indoor
        name: "Flow"
      energy_produced: # Indoor
        name: "Energy Produced"
      # power_produced: # Indoor
      #   name: "Power Produced"
      indoor_power_consumed: # Should be used with outdoor device address
        name: "Indoor power consumed"

    - address: "10.00.00" # Outdoor device address 
      outdoor_temperature: # Should be used with outdoor device address
        name: "Outdoor temperature"
      power_consumed: # Should be used with outdoor device address
        name: "Power consumed"
      energy_consumed: # Should be used with outdoor device address
        name: "Energy consumed"
